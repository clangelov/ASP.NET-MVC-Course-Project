<br />
<h2 class="text-center">Edit, Update or Delete Products</h2>
@(Html.Kendo().Grid<VinylC.Web.MVC.Areas.Administration.Models.Products.ProductAdminViewModel>()
      .Name("grid")
      .Columns(columns =>
      {
          columns.Bound(c => c.Picture).ClientTemplate(
                    @"<div class='customer-photo'
                        style='background-image: url(#:data.Picture#);'></div>")
              .Width(60);
          columns.Bound(c => c.Title);
          columns.Bound(c => c.Description);
          columns.Bound(c => c.Price);          
          columns.Bound(c => c.ReleaseDate);
          columns.Command(c => c.Edit());
          columns.Command(c => c.Destroy());
      })
      .ToolBar(toolbar => {
          toolbar.Create();
      })
      .Editable(editable => editable.Mode(GridEditMode.PopUp))
      .Pageable(page => page.Refresh(true))
      .Selectable(selectable => {
          selectable.Mode(GridSelectionMode.Single);
          selectable.Type(GridSelectionType.Row);
      })
      .Sortable(sortable => {
          sortable.SortMode(GridSortMode.SingleColumn);
      })
      .Filterable()
      .Resizable(resize => resize.Columns(true))
      .DataSource(dataSource => dataSource
          .Ajax()
          .Model(model => model.Id(p => p.Id))
          .Read(read => read.Action("ProductsRead", "Product"))
          .Create(create => create.Action("ProductsCreate", "Product"))
          .Update(update => update.Action("ProductsUpdate", "Product"))
          .Destroy(destroy => destroy.Action("ProductsDestroy", "Product"))
      )
)

<style>
    .customer-photo {
        display: inline-block;
        width: 64px;
        height: 64px;
        border-radius: 50%;
        background-size: 64px 70px;
        background-position: center center;
        vertical-align: middle;
        line-height: 64px;
        box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);
        margin-left: 5px;
    }
</style>

